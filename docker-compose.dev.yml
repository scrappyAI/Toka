version: '3.8'

services:
  toka-agents-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: toka-background-agents-dev
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "9000:9000"
      - "3000:3000"
    env_file:
      - .env.dev
    environment:
      # Development database configuration
      - DATABASE_URL=${DATABASE_URL:-sqlite:///app/data/agents_dev.db}
      - STORAGE_TYPE=${STORAGE_TYPE:-sqlite}
      
      # Development LLM Configuration
      - LLM_PROVIDER=${LLM_PROVIDER:-anthropic}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LLM_MODEL=${LLM_MODEL:-claude-3-5-sonnet-20241022}
      - LLM_RATE_LIMIT=${LLM_RATE_LIMIT:-10}
      - LLM_TIMEOUT=${LLM_TIMEOUT:-60}
      - LLM_DEBUG=${LLM_DEBUG:-true}
      
      # Development agent settings
      - AGENT_POOL_SIZE=${AGENT_POOL_SIZE:-5}
      - MAX_CONCURRENT_AGENTS=${MAX_CONCURRENT_AGENTS:-3}
      - AGENT_SPAWN_TIMEOUT=${AGENT_SPAWN_TIMEOUT:-60}
      - WORKSTREAM_TIMEOUT=${WORKSTREAM_TIMEOUT:-1800}
      
      # Development performance settings
      - RUST_LOG=${RUST_LOG:-debug}
      - RUST_BACKTRACE=${RUST_BACKTRACE:-1}
      - TOKIO_WORKER_THREADS=${TOKIO_WORKER_THREADS:-2}
      - CONTEXT_CACHE_SIZE=${CONTEXT_CACHE_SIZE:-512}
      - CONTEXT_CACHE_TTL=${CONTEXT_CACHE_TTL:-1800}
      
      # Development security settings
      - RUST_SECURE_ZERO_MEMORY=${RUST_SECURE_ZERO_MEMORY:-0}
      - AGENT_SANDBOX_ENABLED=${AGENT_SANDBOX_ENABLED:-false}
      - CAPABILITY_VALIDATION=${CAPABILITY_VALIDATION:-permissive}
      - JWT_SECRET=${JWT_SECRET:-dev-jwt-secret-change-in-production}
      
      # Development monitoring
      - METRICS_ENABLED=${METRICS_ENABLED:-true}
      - TRACING_ENABLED=${TRACING_ENABLED:-true}
      - LOG_LEVEL=${LOG_LEVEL:-debug}
    
    volumes:
      - agent_data_dev:/app/data
      - agent_logs_dev:/app/logs
      - agent_config_dev:/app/config
      - ./config/agents.toml:/app/config/agents.toml:ro
      # Development: mount source code for hot reloading
      - .:/app/src:ro
    
    depends_on:
      - prometheus-dev
      - grafana-dev
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 60s
      timeout: 30s
      retries: 5
      start_period: 60s
    
    security_opt:
      - no-new-privileges:true
    
    networks:
      - toka-network-dev

  prometheus-dev:
    image: prom/prometheus:latest
    container_name: toka-prometheus-dev
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./config/prometheus.dev.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data_dev:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - toka-network-dev

  grafana-dev:
    image: grafana/grafana:latest
    container_name: toka-grafana-dev
    restart: unless-stopped
    ports:
      - "3002:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data_dev:/var/lib/grafana
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards
      - ./config/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus-dev
    networks:
      - toka-network-dev

  redis-dev:
    image: redis:7-alpine
    container_name: toka-redis-dev
    restart: unless-stopped
    ports:
      - "6380:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-tokaagentsdev}
    volumes:
      - redis_data_dev:/data
    networks:
      - toka-network-dev

volumes:
  agent_data_dev:
    driver: local
  agent_logs_dev:
    driver: local
  agent_config_dev:
    driver: local
  prometheus_data_dev:
    driver: local
  grafana_data_dev:
    driver: local
  redis_data_dev:
    driver: local

networks:
  toka-network-dev:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16 