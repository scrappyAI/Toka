[package]
name = "toka-analysis-tools"
version.workspace = true
authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
description = "Analysis tools for Toka OS - secure Rust wrappers for Python-based code analysis tools."

[dependencies]
# Core Toka components
toka-tools = { path = "../toka-tools" }
toka-types = { path = "../toka-types" }
toka-agent-runtime = { path = "../toka-agent-runtime" }

# Async runtime
tokio = { workspace = true, features = ["full"] }
futures = { workspace = true }
async-trait = { workspace = true }

# Error handling
anyhow = { workspace = true }
thiserror = { workspace = true }

# Serialization
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }

# Logging and tracing
tracing = { workspace = true }

# File system operations
tempfile = "3.10"
which = "6.0"

# Process management and sandboxing
nix = { version = "0.29", features = ["process", "signal", "user", "mount"] }
libc = "0.2"

# Security and validation
sha2 = "0.10"
base64 = "0.22"

# Time handling
chrono = { workspace = true, features = ["serde"] }

# UUID generation
uuid = { workspace = true, features = ["v4", "serde"] }

# Path manipulation
path-clean = "1.0"

[dev-dependencies]
tokio-test = { workspace = true }
tempfile = "3.10"
toka-auth = { path = "../toka-auth" }
tracing-subscriber = { workspace = true, features = ["env-filter"] }

[features]
default = ["control-flow-analysis", "dependency-analysis", "combined-analysis"]
control-flow-analysis = []
dependency-analysis = []
combined-analysis = []
sandbox = ["nix"]
unsafe-direct-execution = []  # For testing only - bypasses sandbox

[[example]]
name = "integration"
required-features = ["control-flow-analysis", "dependency-analysis", "combined-analysis"]