# Toka Background Agent Configuration
# This file defines the agents that will be spawned and orchestrated

[orchestration]
# Maximum number of agents that can run concurrently
max_concurrent_agents = 8

# Default timeout for agent spawning (seconds)
agent_spawn_timeout = 30

# Default timeout for workstream completion (seconds)
workstream_timeout = 3600

# Agent pool size for efficient resource management
agent_pool_size = 10

[security]
# Enable sandbox mode for agent execution
sandbox_enabled = true

# Capability validation level: strict, moderate, permissive
capability_validation = "strict"

# Default resource limits for agents
[security.resource_limits]
max_memory = "512MB"
max_cpu = "0.5"
timeout = "1800"

[storage]
# Storage backend type: memory, sqlite, sled
backend = "sqlite"

# Database connection string
database_url = "sqlite:///app/data/agents.db"

# Event persistence settings
persistence_buffer_size = 256
persistence_interval = 30

[llm]
# LLM provider configuration
provider = "anthropic"
model = "claude-3-5-sonnet-20241022"
rate_limit = 50
timeout = 30
debug_mode = false

[monitoring]
# Enable metrics collection
metrics_enabled = true

# Enable distributed tracing
tracing_enabled = true

# Log level: error, warn, info, debug, trace
log_level = "info"

# Prometheus metrics endpoint
metrics_endpoint = "0.0.0.0:9090"

[caching]
# Context cache settings for optimal performance
context_cache_size = 2048
context_cache_ttl = 7200

# Response cache for LLM calls
response_cache_enabled = true
response_cache_size = 1024
response_cache_ttl = 3600

# Agent definitions
[[agents]]
name = "toka-system-monitor"
version = "1.0.0"
domain = "system-monitoring"
priority = "critical"
workstream = "infrastructure"
branch = "main"

[agents.capabilities]
primary = ["system-monitoring", "resource-tracking", "health-checks"]
secondary = ["performance-optimization", "alert-management"]

[[agents.objectives]]
description = "Monitor Toka system health and performance"
deliverable = "System health dashboard and alerts"
validation = "System metrics within acceptable thresholds"

[[agents.tasks.default]]
description = "Monitor system resources and health"
priority = "critical"
dependencies = []

[[agents]]
name = "toka-configuration-manager"
version = "1.0.0"
domain = "configuration-management"
priority = "high"
workstream = "infrastructure"
branch = "main"

[agents.capabilities]
primary = ["config-validation", "config-updates", "environment-management"]
secondary = ["configuration-backup", "rollback-management"]

[[agents.objectives]]
description = "Manage and validate Toka system configuration"
deliverable = "Configuration validation reports and updates"
validation = "Configuration consistency and validity"

[[agents.tasks.default]]
description = "Validate and manage system configuration"
priority = "high"
dependencies = []

[[agents]]
name = "toka-orchestration-coordinator"
version = "1.0.0"
domain = "orchestration-coordination"
priority = "critical"
workstream = "coordination"
branch = "main"

[agents.capabilities]
primary = ["agent-coordination", "workstream-management", "dependency-resolution"]
secondary = ["resource-allocation", "conflict-resolution"]

[[agents.objectives]]
description = "Coordinate agent orchestration and workstreams"
deliverable = "Orchestration coordination reports"
validation = "Successful agent coordination and workstream completion"

[[agents.tasks.default]]
description = "Coordinate agent spawning and workstream execution"
priority = "critical"
dependencies = []

[[agents]]
name = "toka-self-improvement-agent"
version = "1.0.0"
domain = "self-improvement"
priority = "high"
workstream = "self-orchestration"
branch = "main"

[agents.capabilities]
primary = ["self-analysis", "optimization-planning", "improvement-execution"]
secondary = ["performance-monitoring", "capability-enhancement"]

[[agents.objectives]]
description = "Continuously improve Toka system capabilities"
deliverable = "Self-improvement recommendations and implementations"
validation = "Measurable system improvements achieved"

[[agents.tasks.default]]
description = "Analyze system performance and implement improvements"
priority = "high"
dependencies = ["toka-system-monitor"]

[[agents]]
name = "toka-meta-orchestrator"
version = "1.0.0"
domain = "meta-orchestration"
priority = "high"
workstream = "self-orchestration"
branch = "main"

[agents.capabilities]
primary = ["orchestration-optimization", "agent-lifecycle-management", "system-evolution"]
secondary = ["orchestration-analytics", "agent-performance-tuning"]

[[agents.objectives]]
description = "Orchestrate the orchestration system itself"
deliverable = "Meta-orchestration reports and optimizations"
validation = "Improved orchestration efficiency and capability"

[[agents.tasks.default]]
description = "Optimize and evolve the orchestration system"
priority = "high"
dependencies = ["toka-orchestration-coordinator", "toka-configuration-manager"] 