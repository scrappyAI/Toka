{
  "$schema": "https://github.com/toka-ai/toka/.llm/schemas/resource-envelope-v1.json",
  "$id": "https://github.com/toka-ai/toka/.llm/schemas/tools/folder-tidy-tool.json",
  "kind": "tool",
  "metadata": {
    "name": "folder-tidy",
    "version": "1.0.0",
    "title": "Folder Tidy Tool",
    "description": "Organizes and tidies folder structures according to defined policies and schemas",
    "tags": [
      "folder.organization",
      "system.maintenance",
      "structure"
    ],
    "priority": "medium",
    "maintainer": "Toka AI Team",
    "created": "2025-07-07T00:00:00Z",
    "lastModified": "2025-07-07T00:00:00Z"
  },
  "spec": {
    "toolType": "maintenance",
    "capabilities": {
      "system": {
        "posix": [
          "read",
          "write",
          "execute"
        ],
        "rbac": [
          "folder:organize",
          "folder:validate",
          "file:move",
          "file:rename"
        ]
      },
      "io": {
        "fs": [
          "read",
          "write",
          "create",
          "move",
          "delete"
        ]
      },
      "validation": {
        "structure": [
          "validate",
          "organize"
        ],
        "schema": [
          "validate",
          "verify"
        ]
      }
    },
    "implementation": {
      "language": "python",
      "entryPoint": "scripts/folder-tidy.py",
      "dependencies": [
        "click>=8.0.0",
        "pathlib",
        "shutil"
      ],
      "arguments": [
        {
          "name": "command",
          "type": "string",
          "required": true,
          "enum": ["organize", "validate", "audit", "clean"],
          "description": "Command to execute"
        },
        {
          "name": "target",
          "type": "string",
          "required": true,
          "description": "Target directory to process"
        },
        {
          "name": "dry-run",
          "type": "boolean",
          "required": false,
          "default": true,
          "description": "Show what would be done without making changes"
        },
        {
          "name": "backup",
          "type": "boolean",
          "required": false,
          "default": true,
          "description": "Create backup before making changes"
        }
      ],
      "output": {
        "format": "json",
        "schema": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean"
            },
            "changes": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string"
                  },
                  "source": {
                    "type": "string"
                  },
                  "destination": {
                    "type": "string"
                  },
                  "reason": {
                    "type": "string"
                  }
                }
              }
            },
            "issues": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string"
                  },
                  "issue": {
                    "type": "string"
                  },
                  "severity": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "configuration": {
      "backupEnabled": true,
      "dryRunByDefault": true,
      "maxDepth": 10,
      "excludePatterns": [
        ".git",
        "node_modules",
        "__pycache__",
        "*.pyc"
      ]
    },
    "errorHandling": {
      "strategy": "graceful",
      "logging": "detailed",
      "recovery": "automatic"
    },
    "performance": {
      "timeout": "PT10M",
      "memory": "512MB",
      "cpu": "1.0"
    }
  }
} 