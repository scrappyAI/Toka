{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$id": "https://github.com/scrappyAI/Toka/blob/main/.cursor/schemas/agent-spec-schema.json",
  "title": "Agent Specification Schema",
  "description": "Schema for AI agent specifications using universal envelope format",
  "version": "2.0.0",
  "allOf": [
    {
      "$ref": "https://github.com/scrappyAI/Toka/blob/main/.cursor/schemas/resource-envelope-v1.json"
    },
    {
      "properties": {
        "kind": {
          "const": "agent"
        },
        "spec": {
          "type": "object",
          "required": [
            "capabilities",
            "objectives",
            "tasks",
            "dependencies",
            "reporting",
            "security",
            "rules",
            "risk_mitigation",
            "success_criteria"
          ],
          "properties": {
            "capabilities": {
              "$ref": "https://github.com/scrappyAI/Toka/blob/main/.cursor/schemas/resource-envelope-v1.json#/$defs/capability-map"
            },
            "objectives": {
              "type": "array",
              "items": {
                "$ref": "resource-envelope-v1.json#/$defs/objective"
              },
              "minItems": 1,
              "maxItems": 10
            },
            "tasks": {
              "type": "object",
              "required": [
                "default"
              ],
              "properties": {
                "default": {
                  "type": "array",
                  "items": {
                    "$ref": "resource-envelope-v1.json#/$defs/task"
                  },
                  "minItems": 1
                },
                "conditional": {
                  "type": "object",
                  "description": "Conditional tasks based on context",
                  "patternProperties": {
                    "^[a-z][a-z0-9_]*$": {
                      "type": "array",
                      "items": {
                        "$ref": "resource-envelope-v1.json#/$defs/task"
                      }
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            "dependencies": {
              "type": "object",
              "required": [
                "required",
                "optional"
              ],
              "properties": {
                "required": {
                  "type": "object",
                  "description": "Required dependencies (agent-name: reason)",
                  "patternProperties": {
                    "^[a-z][a-z0-9-]*[a-z0-9]$": {
                      "type": "string",
                      "description": "Reason for dependency"
                    }
                  }
                },
                "optional": {
                  "type": "object",
                  "description": "Optional dependencies (agent-name: reason)",
                  "patternProperties": {
                    "^[a-z][a-z0-9-]*[a-z0-9]$": {
                      "type": "string",
                      "description": "Reason for optional dependency"
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            "reporting": {
              "type": "object",
              "required": [
                "frequency",
                "channels",
                "metrics"
              ],
              "properties": {
                "frequency": {
                  "type": "string",
                  "enum": [
                    "real-time",
                    "hourly",
                    "daily",
                    "weekly",
                    "on-milestone",
                    "on-completion"
                  ],
                  "description": "Reporting frequency"
                },
                "channels": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "pattern": "^[a-z][a-z0-9.-]*[a-z0-9]$"
                  },
                  "minItems": 1,
                  "description": "Reporting channels using tag format"
                },
                "metrics": {
                  "type": "array",
                  "items": {
                    "$ref": "resource-envelope-v1.json#/$defs/metric"
                  },
                  "minItems": 1,
                  "description": "Metrics to track"
                }
              },
              "additionalProperties": false
            },
            "security": {
              "type": "object",
              "required": [
                "sandbox",
                "resource_limits"
              ],
              "properties": {
                "sandbox": {
                  "type": "boolean",
                  "description": "Whether agent runs in sandbox"
                },
                "resource_limits": {
                  "type": "object",
                  "required": [
                    "max_memory",
                    "max_cpu",
                    "timeout"
                  ],
                  "properties": {
                    "max_memory": {
                      "type": "string",
                      "pattern": "^\\d+[KMGT]?B$",
                      "description": "Maximum memory usage"
                    },
                    "max_cpu": {
                      "type": "string",
                      "pattern": "^\\d+%$",
                      "description": "Maximum CPU usage"
                    },
                    "timeout": {
                      "$ref": "resource-envelope-v1.json#/$defs/duration"
                    },
                    "max_disk_usage": {
                      "type": "string",
                      "pattern": "^\\d+[KMGT]?B$",
                      "description": "Maximum disk usage"
                    },
                    "max_network_bandwidth": {
                      "type": "string",
                      "pattern": "^\\d+[KMGT]?bps$",
                      "description": "Maximum network bandwidth"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "rules": {
              "type": "array",
              "items": {
                "$ref": "resource-envelope-v1.json#/$defs/rule-reference"
              },
              "description": "References to rule resources"
            },
            "risk_mitigation": {
              "type": "object",
              "required": [
                "high_priority_risks",
                "monitoring"
              ],
              "properties": {
                "high_priority_risks": {
                  "type": "array",
                  "items": {
                    "$ref": "resource-envelope-v1.json#/$defs/risk"
                  },
                  "minItems": 1,
                  "description": "High priority risks and mitigations"
                },
                "monitoring": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 200
                  },
                  "minItems": 1,
                  "description": "Monitoring and alerting strategies"
                }
              },
              "additionalProperties": false
            },
            "success_criteria": {
              "type": "object",
              "required": [
                "final_validation"
              ],
              "properties": {
                "phase_1": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 200
                  },
                  "description": "Phase 1 success criteria"
                },
                "phase_2": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 200
                  },
                  "description": "Phase 2 success criteria"
                },
                "final_validation": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 200
                  },
                  "minItems": 1,
                  "description": "Final validation criteria"
                }
              },
              "additionalProperties": false
            },
            "github_integration": {
              "type": "object",
              "description": "GitHub-specific configuration (for GitHub agents)",
              "properties": {
                "api_endpoints": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "GitHub API endpoints used"
                },
                "webhook_events": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "GitHub webhook events handled"
                },
                "permissions": {
                  "type": "object",
                  "description": "Required GitHub permissions"
                },
                "rate_limiting": {
                  "type": "object",
                  "description": "Rate limiting configuration"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      }
    }
  ]
}