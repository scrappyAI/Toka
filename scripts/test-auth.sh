#!/bin/bash

# Toka Collaborative Auth - Test Script
# This script helps you test the authentication system easily

set -e

echo "üöÄ Toka Collaborative Auth Test Script"
echo "======================================"

# Check if Rust is installed
if ! command -v cargo &> /dev/null; then
    echo "‚ùå Rust is not installed. Please install it from https://rustup.rs/"
    exit 1
fi

echo "‚úÖ Rust is installed"

# Check if we're in the right directory
if [ ! -f "Cargo.toml" ]; then
    echo "‚ùå Please run this script from the Toka root directory"
    exit 1
fi

echo "‚úÖ In the right directory"

# Check if environment variables are set
if [ -z "$GITHUB_CLIENT_ID" ] || [ -z "$GITHUB_CLIENT_SECRET" ]; then
    echo "‚ö†Ô∏è  Environment variables not set. Checking for .env file..."
    
    if [ -f ".env" ]; then
        echo "‚úÖ Found .env file, loading variables..."
        source .env
    else
        echo "‚ùå No .env file found. Please create one with your GitHub App credentials."
        echo ""
        echo "Copy the example file and fill in your values:"
        echo "cp crates/toka-collaborative-auth/env.example .env"
        echo ""
        echo "Then edit .env with your GitHub App credentials."
        exit 1
    fi
fi

# Verify required environment variables
if [ -z "$GITHUB_CLIENT_ID" ] || [ -z "$GITHUB_CLIENT_SECRET" ]; then
    echo "‚ùå Missing required environment variables:"
    echo "   GITHUB_CLIENT_ID and GITHUB_CLIENT_SECRET are required"
    echo ""
    echo "Please set them in your .env file or as environment variables."
    exit 1
fi

echo "‚úÖ Environment variables configured"
echo "   GitHub Client ID: $GITHUB_CLIENT_ID"
echo "   Redirect URI: ${REDIRECT_URI:-http://localhost:3000/auth/callback}"

# Build the auth service
echo ""
echo "üî® Building the auth service..."
cargo build --bin toka-auth-service

echo "‚úÖ Auth service built successfully"

# Start the auth service
echo ""
echo "üåê Starting the auth service..."
echo "üì± Visit http://localhost:3000/auth/login to test the OAuth flow"
echo "üîÑ Press Ctrl+C to stop the service"
echo ""

cargo run --bin toka-auth-service 