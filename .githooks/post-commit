#!/bin/bash
# Post-commit hook for AI provenance finalization and documentation audit
# This hook runs after each commit to finalize tracking and update audit trails

set -euo pipefail

# Configuration
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"
PROVENANCE_SCRIPT="$PROJECT_ROOT/scripts/git-doc-provenance.sh"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# Get commit information
COMMIT_HASH=$(git rev-parse HEAD)
COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")
COMMIT_AUTHOR=$(git log -1 --pretty=format:"%an <%ae>")
COMMIT_DATE=$(git log -1 --pretty=format:"%ci")

echo -e "${BLUE}=== Post-commit AI Provenance Tracking ===${NC}"

# Check if commit has AI-generated content trailers
has_ai_trailers=$(git log -1 --pretty=format:"%B" | grep -c "AI-Generated: true" || echo "0")

if [[ $has_ai_trailers -gt 0 ]]; then
    echo -e "${YELLOW}AI-generated content detected in commit${NC}"
    
    # Extract AI metadata from commit trailers
    ai_model=$(git log -1 --pretty=format:"%B" | grep "AI-Model:" | sed 's/AI-Model: //' || echo "unknown")
    ai_confidence=$(git log -1 --pretty=format:"%B" | grep "AI-Confidence:" | sed 's/AI-Confidence: //' || echo "unknown")
    human_review=$(git log -1 --pretty=format:"%B" | grep "Human-Review:" | sed 's/Human-Review: //' || echo "false")
    
    echo -e "${GREEN}✓ AI Model: $ai_model${NC}"
    echo -e "${GREEN}✓ Confidence: $ai_confidence${NC}"
    echo -e "${GREEN}✓ Human Review: $human_review${NC}"
    
    # Update AI provenance database with commit information
    if [[ -x "$PROVENANCE_SCRIPT" ]]; then
        # Get files changed in this commit
        while IFS= read -r file; do
            if [[ -f "$file" ]]; then
                "$PROVENANCE_SCRIPT" track "$file" "$ai_model" "code" "$ai_confidence" "$human_review" >/dev/null 2>&1 || true
            fi
        done < <(git diff-tree --no-commit-id --name-only -r HEAD)
    fi
else
    echo -e "${GREEN}✓ No AI-generated content in this commit${NC}"
fi

# Update documentation audit trail if documentation was changed
doc_files_changed=$(git diff-tree --no-commit-id --name-only -r HEAD | grep -E "\.md$" | wc -l)
if [[ $doc_files_changed -gt 0 ]]; then
    echo -e "${YELLOW}Documentation files changed, updating audit trail...${NC}"
    
    if [[ -x "$PROVENANCE_SCRIPT" ]]; then
        # Generate updated audit report
        "$PROVENANCE_SCRIPT" audit >/dev/null 2>&1 || true
        echo -e "${GREEN}✓ Documentation audit trail updated${NC}"
    fi
else
    echo -e "${GREEN}✓ No documentation files changed${NC}"
fi

# Create commit provenance record
provenance_dir="$PROJECT_ROOT/.git/provenance"
mkdir -p "$provenance_dir"

commit_record="$provenance_dir/commit-$(echo $COMMIT_HASH | cut -c1-8).json"
cat > "$commit_record" << EOF
{
    "commit_hash": "$COMMIT_HASH",
    "commit_message": $(echo "$COMMIT_MESSAGE" | jq -R .),
    "commit_author": $(echo "$COMMIT_AUTHOR" | jq -R .),
    "commit_date": "$COMMIT_DATE",
    "branch": "$(git branch --show-current 2>/dev/null || echo 'unknown')",
    "ai_generated": $([ $has_ai_trailers -gt 0 ] && echo "true" || echo "false"),
    "ai_metadata": {
        "model": "$ai_model",
        "confidence": "$ai_confidence",
        "human_review": "$human_review"
    },
    "files_changed": $(git diff-tree --no-commit-id --name-only -r HEAD | wc -l),
    "documentation_changed": $doc_files_changed,
    "rust_files_changed": $(git diff-tree --no-commit-id --name-only -r HEAD | grep -E "\.rs$" | wc -l),
    "changed_files": $(git diff-tree --no-commit-id --name-only -r HEAD | jq -R . | jq -s .),
    "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)"
}
EOF

echo -e "${GREEN}✓ Commit provenance record created: $commit_record${NC}"

# Clean up old commit metadata
commit_metadata_file="$PROJECT_ROOT/.git/COMMIT_METADATA"
if [[ -f "$commit_metadata_file" ]]; then
    rm -f "$commit_metadata_file"
fi

# Optional: Clean up old provenance records (keep last 100)
provenance_files=$(ls -1 "$provenance_dir"/commit-*.json 2>/dev/null | wc -l)
if [[ $provenance_files -gt 100 ]]; then
    ls -1t "$provenance_dir"/commit-*.json | tail -n +101 | xargs rm -f
    echo -e "${YELLOW}✓ Cleaned up old provenance records${NC}"
fi

echo -e "${GREEN}=== Post-commit processing complete ===${NC}"

exit 0 