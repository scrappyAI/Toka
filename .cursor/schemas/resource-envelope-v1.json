{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$id": "https://github.com/scrappyAI/Toka/blob/main/.cursor/schemas/resource-envelope-v1.json",
  "title": "Universal Resource Envelope Schema",
  "description": "Universal meta-schema for all Toka resources (agents, rules, tools, plans, events)",
  "version": "1.0.0",
  "type": "object",
  "required": [
    "kind",
    "metadata",
    "spec"
  ],
  "properties": {
    "kind": {
      "type": "string",
      "enum": [
        "agent",
        "rule",
        "tool",
        "plan",
        "event",
        "capability",
        "workflow",
        "policy",
        "metric"
      ],
      "description": "Resource type - determines spec schema validation"
    },
    "metadata": {
      "$ref": "#/$defs/metadata"
    },
    "spec": {
      "type": "object",
      "description": "Resource-specific payload - structure depends on 'kind'"
    },
    "extensions": {
      "$ref": "#/$defs/extensions"
    }
  },
  "additionalProperties": false,
  "$defs": {
    "metadata": {
      "type": "object",
      "required": [
        "name",
        "version"
      ],
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
          "minLength": 2,
          "maxLength": 64,
          "description": "Resource identifier in kebab-case format"
        },
        "version": {
          "$ref": "#/$defs/semver"
        },
        "title": {
          "type": "string",
          "minLength": 5,
          "maxLength": 100,
          "description": "Human-readable title"
        },
        "description": {
          "type": "string",
          "minLength": 10,
          "maxLength": 500,
          "description": "Detailed description of resource purpose"
        },
        "tags": {
          "$ref": "#/$defs/tags"
        },
        "priority": {
          "$ref": "#/$defs/priority"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp (automatically managed)"
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "description": "Last modification timestamp (automatically managed)"
        },
        "schema_version": {
          "type": "string",
          "description": "Schema version this resource follows (automatically managed)"
        },
        "checksum": {
          "type": "string",
          "pattern": "^[a-f0-9]{16}$",
          "description": "Content checksum for integrity (automatically managed)"
        },
        "supersedes": {
          "type": "string",
          "format": "uri",
          "description": "$id of resource this replaces"
        },
        "migrator": {
          "type": "string",
          "format": "uri",
          "description": "URI to script or agent spec that performs migration"
        },
        "author": {
          "type": "string",
          "description": "Resource author"
        },
        "maintainer": {
          "type": "string",
          "description": "Current maintainer"
        },
        "repository": {
          "type": "string",
          "format": "uri",
          "description": "Source repository URL"
        },
        "documentation": {
          "type": "string",
          "format": "uri",
          "description": "Documentation URL"
        }
      },
      "additionalProperties": false
    },
    "semver": {
      "type": "string",
      "pattern": "^(v)?\\d+\\.\\d+\\.\\d+(-[a-zA-Z0-9-]+)?(\\+[a-zA-Z0-9-]+)?$",
      "description": "Semantic version with optional v prefix and pre-release/build metadata"
    },
    "priority": {
      "type": "string",
      "enum": [
        "critical",
        "high",
        "medium",
        "low"
      ],
      "description": "Priority level"
    },
    "duration": {
      "type": "string",
      "pattern": "^\\d+[smhdw]$",
      "description": "Duration in seconds(s), minutes(m), hours(h), days(d), weeks(w)"
    },
    "tags": {
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^[a-z0-9][a-z0-9-\\.]*[a-z0-9]$",
        "minLength": 2,
        "maxLength": 64
      },
      "uniqueItems": true,
      "description": "Hierarchical tags for categorization (e.g., 'security.auth', 'io.fs.read')"
    },
    "capability-map": {
      "type": "object",
      "properties": {
        "read": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^[a-z0-9-\\.]+:[a-zA-Z0-9/_.-]*$"
          },
          "description": "Read permissions with namespace:path format"
        },
        "write": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^[a-z0-9-\\.]+:[a-zA-Z0-9/_.-]*$"
          },
          "description": "Write permissions with namespace:path format"
        },
        "execute": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "string",
                "pattern": "^[a-z0-9-\\.]+:[a-zA-Z0-9/_.-]*$"
              },
              {
                "type": "object",
                "required": [
                  "tool"
                ],
                "properties": {
                  "tool": {
                    "type": "string"
                  },
                  "args": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "env": {
                    "type": "object",
                    "patternProperties": {
                      "^[A-Z_][A-Z0-9_]*$": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            ]
          },
          "description": "Execute permissions - strings or tool execution objects"
        },
        "network": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^(https?://)?[a-zA-Z0-9.-]+(:[0-9]+)?(/.*)?$"
          },
          "description": "Network access patterns"
        }
      },
      "additionalProperties": false
    },
    "task": {
      "type": "object",
      "required": [
        "id",
        "description",
        "priority"
      ],
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
          "description": "Task identifier"
        },
        "description": {
          "type": "string",
          "minLength": 10,
          "maxLength": 200,
          "description": "Task description"
        },
        "priority": {
          "$ref": "#/$defs/priority"
        },
        "estimated_duration": {
          "$ref": "#/$defs/duration"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$"
          },
          "description": "Task dependencies by ID"
        },
        "conditions": {
          "type": "object",
          "description": "Conditional execution requirements"
        },
        "outputs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Expected task outputs"
        },
        "validation": {
          "type": "string",
          "description": "Validation criteria for task completion"
        }
      },
      "additionalProperties": false
    },
    "objective": {
      "type": "object",
      "required": [
        "description",
        "deliverable",
        "validation"
      ],
      "properties": {
        "description": {
          "type": "string",
          "minLength": 10,
          "maxLength": 200,
          "description": "Clear objective description"
        },
        "deliverable": {
          "type": "string",
          "minLength": 10,
          "maxLength": 200,
          "description": "Concrete deliverable expected"
        },
        "validation": {
          "type": "string",
          "minLength": 10,
          "maxLength": 200,
          "description": "How to validate completion"
        },
        "priority": {
          "$ref": "#/$defs/priority"
        },
        "deadline": {
          "type": "string",
          "format": "date-time",
          "description": "Objective deadline"
        },
        "metrics": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Success metrics"
        }
      },
      "additionalProperties": false
    },
    "rule-reference": {
      "type": "object",
      "required": [
        "rule_id"
      ],
      "properties": {
        "rule_id": {
          "type": "string",
          "format": "uri",
          "description": "URI reference to rule resource"
        },
        "version": {
          "$ref": "#/$defs/semver"
        },
        "overrides": {
          "type": "object",
          "description": "Context-specific rule overrides"
        },
        "conditions": {
          "type": "object",
          "description": "Conditions for rule application"
        }
      },
      "additionalProperties": false
    },
    "risk": {
      "type": "object",
      "required": [
        "risk",
        "mitigation"
      ],
      "properties": {
        "risk": {
          "type": "string",
          "minLength": 10,
          "maxLength": 200,
          "description": "Risk description"
        },
        "mitigation": {
          "type": "string",
          "minLength": 10,
          "maxLength": 200,
          "description": "Mitigation strategy"
        },
        "probability": {
          "type": "string",
          "enum": [
            "very-low",
            "low",
            "medium",
            "high",
            "very-high"
          ],
          "description": "Risk probability"
        },
        "impact": {
          "type": "string",
          "enum": [
            "very-low",
            "low",
            "medium",
            "high",
            "very-high"
          ],
          "description": "Risk impact"
        },
        "category": {
          "type": "string",
          "description": "Risk category"
        }
      },
      "additionalProperties": false
    },
    "metric": {
      "type": "object",
      "required": [
        "name",
        "description"
      ],
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
          "description": "Metric name"
        },
        "description": {
          "type": "string",
          "minLength": 10,
          "maxLength": 200,
          "description": "Metric description"
        },
        "type": {
          "type": "string",
          "enum": [
            "counter",
            "gauge",
            "histogram",
            "summary"
          ],
          "description": "Metric type"
        },
        "unit": {
          "type": "string",
          "description": "Metric unit"
        },
        "labels": {
          "type": "object",
          "patternProperties": {
            "^[a-z_][a-z0-9_]*$": {
              "type": "string"
            }
          },
          "description": "Metric labels"
        }
      },
      "additionalProperties": false
    },
    "extensions": {
      "type": "object",
      "description": "Vendor-specific extensions - all keys MUST start with 'x-'",
      "patternProperties": {
        "^x-[a-z][a-z0-9-]*$": {
          "description": "Vendor extension field"
        }
      },
      "additionalProperties": false
    }
  }
}