{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$id": "https://github.com/scrappyAI/Toka/blob/main/.cursor/schemas/plan-schema.json",
  "title": "Plan Schema",
  "description": "Schema for execution plans with ordered steps, guard conditions, and rollback procedures",
  "version": "1.0.0",
  "allOf": [
    {
      "$ref": "resource-envelope-v1.json"
    },
    {
      "properties": {
        "kind": {
          "const": "plan"
        },
        "spec": {
          "type": "object",
          "required": [
            "steps",
            "execution_mode",
            "rollback_strategy"
          ],
          "properties": {
            "steps": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/plan-step"
              },
              "minItems": 1,
              "description": "Ordered execution steps"
            },
            "execution_mode": {
              "type": "string",
              "enum": [
                "sequential",
                "parallel",
                "conditional",
                "pipeline"
              ],
              "description": "How steps should be executed"
            },
            "rollback_strategy": {
              "type": "string",
              "enum": [
                "none",
                "automatic",
                "manual",
                "checkpoint"
              ],
              "description": "Rollback strategy on failure"
            },
            "timeout": {
              "$ref": "resource-envelope-v1.json#/$defs/duration"
            },
            "retry_policy": {
              "$ref": "#/$defs/retry-policy"
            },
            "guard_conditions": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/guard-condition"
              },
              "description": "Conditions that must be met before execution"
            },
            "rollback_steps": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/plan-step"
              },
              "description": "Steps to execute during rollback"
            },
            "checkpoints": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/checkpoint"
              },
              "description": "Execution checkpoints for recovery"
            },
            "variables": {
              "type": "object",
              "patternProperties": {
                "^[a-z][a-z0-9_]*$": {
                  "type": "string"
                }
              },
              "description": "Plan variables and their default values"
            },
            "outputs": {
              "type": "object",
              "patternProperties": {
                "^[a-z][a-z0-9_]*$": {
                  "type": "string"
                }
              },
              "description": "Expected plan outputs"
            }
          },
          "additionalProperties": false
        }
      }
    }
  ],
  "$defs": {
    "plan-step": {
      "type": "object",
      "required": [
        "id",
        "action",
        "type"
      ],
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
          "description": "Step identifier"
        },
        "action": {
          "type": "string",
          "minLength": 5,
          "maxLength": 200,
          "description": "Action to perform"
        },
        "type": {
          "type": "string",
          "enum": [
            "command",
            "agent-task",
            "validation",
            "checkpoint",
            "condition",
            "loop",
            "parallel-group",
            "rollback-point"
          ],
          "description": "Step type"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$"
          },
          "description": "Step dependencies by ID"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/condition"
          },
          "description": "Execution conditions"
        },
        "timeout": {
          "$ref": "resource-envelope-v1.json#/$defs/duration"
        },
        "retry_count": {
          "type": "integer",
          "minimum": 0,
          "maximum": 10,
          "description": "Number of retry attempts"
        },
        "on_failure": {
          "type": "string",
          "enum": [
            "stop",
            "continue",
            "rollback",
            "retry"
          ],
          "description": "Action on step failure"
        },
        "parameters": {
          "type": "object",
          "description": "Step-specific parameters"
        },
        "expected_outputs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Expected step outputs"
        },
        "validation": {
          "$ref": "#/$defs/validation-rule"
        }
      },
      "additionalProperties": false
    },
    "guard-condition": {
      "type": "object",
      "required": [
        "name",
        "condition",
        "action"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Guard condition name"
        },
        "condition": {
          "type": "string",
          "description": "Boolean condition expression"
        },
        "action": {
          "type": "string",
          "enum": [
            "allow",
            "deny",
            "warn"
          ],
          "description": "Action when condition is met"
        },
        "message": {
          "type": "string",
          "description": "Message to display when condition triggers"
        }
      },
      "additionalProperties": false
    },
    "condition": {
      "type": "object",
      "required": [
        "expression"
      ],
      "properties": {
        "expression": {
          "type": "string",
          "description": "Boolean condition expression"
        },
        "variables": {
          "type": "object",
          "description": "Variables used in expression"
        },
        "timeout": {
          "$ref": "resource-envelope-v1.json#/$defs/duration"
        }
      },
      "additionalProperties": false
    },
    "validation-rule": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "output-match",
            "file-exists",
            "command-success",
            "custom"
          ],
          "description": "Validation type"
        },
        "parameters": {
          "type": "object",
          "description": "Validation parameters"
        },
        "timeout": {
          "$ref": "resource-envelope-v1.json#/$defs/duration"
        }
      },
      "additionalProperties": false
    },
    "retry-policy": {
      "type": "object",
      "properties": {
        "max_attempts": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10,
          "description": "Maximum retry attempts"
        },
        "backoff_strategy": {
          "type": "string",
          "enum": [
            "fixed",
            "exponential",
            "linear"
          ],
          "description": "Backoff strategy between retries"
        },
        "initial_delay": {
          "$ref": "resource-envelope-v1.json#/$defs/duration"
        },
        "max_delay": {
          "$ref": "resource-envelope-v1.json#/$defs/duration"
        },
        "retry_on": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "timeout",
              "error",
              "validation-failure",
              "network-error"
            ]
          },
          "description": "Conditions that trigger retry"
        }
      },
      "additionalProperties": false
    },
    "checkpoint": {
      "type": "object",
      "required": [
        "id",
        "step_id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
          "description": "Checkpoint identifier"
        },
        "step_id": {
          "type": "string",
          "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
          "description": "Step ID where checkpoint occurs"
        },
        "save_state": {
          "type": "boolean",
          "description": "Whether to save execution state"
        },
        "recovery_action": {
          "type": "string",
          "description": "Action to take during recovery"
        }
      },
      "additionalProperties": false
    }
  }
}