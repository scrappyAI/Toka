name: "SecurityBase"
version: "1.0.0"
description: "Core security hardening guidelines for all components"
category: "security"
priority: 90
always_apply: true

extends: ["CoreBaseline"]

objectives:
  - "Detect and mitigate common security weaknesses"
  - "Enforce secure-by-default architecture"
  - "Provide clear audit trails"

security_checks:
  dependencies:
    tools: ["cargo-audit", "cargo-geiger"]
    actions:
      - "Scan for insecure dependencies"
      - "Detect unsafe block usage"
      - "Check for injection risks"
  
  code_practices:
    - "Replace unsafe code with safe patterns"
    - "Validate inputs at system boundaries"
    - "Encrypt secrets at rest"
    - "Scrub in-memory secrets after use"
  
  monitoring:
    - "Add structured logging for auth failures"
    - "Log anomalous input patterns"
    - "Use fuzz testing for parsing logic"
    - "Gate sensitive features with permissions"

commit_requirements:
  security_commits:
    format: "fix(auth): <description of vulnerability fixed>"
    required_fields:
      - "Intent description"
      - "Risk addressed"
      - "Test coverage added"
  
maintenance:
  tagging: "// SECURITY: <explanation>"
  testing: "Write tests for edge cases and regressions"
  reviews: "Security changes require dual approval"