metadata:
  name: "control-flow-analyzer"
  version: "1.0.0"
  category: "analysis"
  description: "Analyzes Rust code control flow patterns and generates comprehensive visualizations"
  author: "Toka Development Team"
  created: "2025-07-06"

spec:
  executable:
    type: "python"
    path: "analysis/control_flow_graph_visualizer.py"
    interpreter: "python3"
    working_directory: "."
  
  capabilities:
    required:
      - "filesystem-read"
      - "code-analysis"
      - "visualization"
      - "process-spawn"
    optional:
      - "filesystem-write"  # for output files
  
  security:
    level: "high"
    sandbox:
      memory_limit: "512MB"
      cpu_limit: "50%"
      timeout: "10m"
      allow_network: false
      readonly_paths:
        - "crates"
        - "src"
        - "tests"
      writable_paths:
        - "control_flow_graphs"
        - "enhanced_cfg_outputs"
  
  parameters:
    - name: "target_function"
      type: "string"
      description: "Specific function name to analyze (optional)"
      required: false
    - name: "output_format"
      type: "enum"
      values: ["mermaid", "png", "svg", "html", "json"]
      default: "mermaid"
      description: "Output format for visualization"
    - name: "complexity_analysis"
      type: "boolean"
      default: true
      description: "Include complexity metrics in analysis"
    - name: "interactive_mode"
      type: "boolean"
      default: false
      description: "Generate interactive HTML reports"

interface:
  discovery:
    auto_discover: true
    patterns:
      - "**/control_flow*visualizer*.py"
      - "**/cfg_*.py"
  
  execution:
    hot_swappable: true
    parallel_safe: true
    resource_intensive: true
  
  integration:
    agent_types: ["analysis", "development", "orchestration", "kernel-events-enhancement"]
    runtime_events: ["agent_lifecycle", "task_completion"]
    compatible_backends: ["all"]
    
protocols:
  - type: "mcp"
    function_name: "analyze_control_flow"
    version: "1.0"
  - type: "a2a"
    action: "code_analysis.control_flow"

outputs:
  primary:
    - type: "visualization"
      formats: ["mermaid", "svg", "png", "html"]
      location: "control_flow_graphs"
    - type: "report"
      formats: ["markdown", "json"]
      location: "control_flow_graphs"
  
  metrics:
    - "analysis_duration"
    - "functions_analyzed"
    - "complexity_score"
    - "graph_generation_time"

dependencies:
  system:
    - "python3"
    - "graphviz"
  python:
    - "aiofiles>=23.2.1"
    - "graphviz>=0.20.1"
  workspace:
    - "crates/**/*.rs"
    - "src/**/*.rs" 