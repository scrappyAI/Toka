metadata:
  name: "raft-analyzer"
  version: "1.0.0"
  category: "analysis"
  description: "Analyzes RAFT consensus cluster health and generates comprehensive reports"
  author: "Toka Development Team"
  created: "2025-07-06"

spec:
  executable:
    type: "python"
    path: "analysis/raft_analysis.py"
    interpreter: "python3"
    working_directory: "."
  
  capabilities:
    required:
      - "filesystem-read"
      - "filesystem-write"
      - "system-monitoring"
      - "network-access"  # for cluster health checks
    optional:
      - "process-spawn"
  
  security:
    level: "medium"  # Needs network access for cluster monitoring
    sandbox:
      memory_limit: "256MB"
      cpu_limit: "30%"
      timeout: "5m"
      allow_network: true
      network_restrictions:
        - "localhost:8080"  # RAFT cluster endpoint
        - "localhost:9090"  # Metrics endpoint
      readonly_paths:
        - "config"
        - "docker-compose.yml"
      writable_paths:
        - "raft_monitoring_reports"
        - "logs"
  
  parameters:
    - name: "analysis_type"
      type: "enum"
      values: ["cluster-health", "performance", "consensus", "full-report"]
      default: "cluster-health"
      description: "Type of RAFT analysis to perform"
    - name: "output_format"
      type: "enum"
      values: ["json", "html", "markdown"]
      default: "json"
      description: "Output format for analysis report"
    - name: "cluster_endpoint"
      type: "string"
      default: "http://localhost:8080"
      description: "RAFT cluster endpoint URL"
    - name: "generate_report"
      type: "boolean"
      default: true
      description: "Generate detailed analysis report"

interface:
  discovery:
    auto_discover: true
    patterns:
      - "**/raft*analysis*.py"
      - "**/raft*monitor*.py"
  
  execution:
    hot_swappable: true
    parallel_safe: true
    resource_intensive: false
  
  integration:
    agent_types: ["monitoring", "operations", "system-monitoring"]
    runtime_events: ["system_health", "cluster_events"]
    compatible_backends: ["all"]
    
protocols:
  - type: "mcp"
    function_name: "analyze_raft_cluster"
    version: "1.0"
  - type: "a2a"
    action: "system_monitoring.raft_analysis"

outputs:
  primary:
    - type: "report"
      formats: ["json", "html", "markdown"]
      location: "raft_monitoring_reports"
    - type: "metrics"
      formats: ["json"]
      location: "raft_monitoring_reports"
  
  metrics:
    - "analysis_duration"
    - "cluster_health_score"
    - "consensus_latency"
    - "node_count"

dependencies:
  system:
    - "python3"
  python:
    - "requests>=2.28.0"
    - "psutil>=5.9.0"
    - "matplotlib>=3.6.0"
    - "pandas>=1.5.0"
  services:
    - "raft-cluster"  # Optional - for live monitoring
  workspace:
    - "docker-compose.yml"
    - "config/monitoring.toml" 