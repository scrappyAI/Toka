metadata:
  name: "music-playlist-orchestrator"
  version: "1.0.0"
  category: "runtime"
  description: "Comprehensive music playlist generation tool that integrates with Spotify and YouTube, supports natural language processing, and enables voice input for creating playlists"
  author: "Toka Development Team"
  created: "2025-01-27"

spec:
  executable:
    type: "python"
    path: "music/orchestrator/music_playlist_orchestrator.py"
    interpreter: "python3"
    working_directory: "."
  
  capabilities:
    required:
      - "network-access"
      - "audio-processing"
      - "api-integration"
      - "nlp-processing"
      - "filesystem-read"
      - "filesystem-write"
    optional:
      - "microphone-access"
      - "gpu-acceleration"
      - "voice-recognition"
  
  security:
    level: "medium"
    sandbox:
      memory_limit: "2GB"
      cpu_limit: "75%"
      timeout: "10m"
      allow_network: true
      readonly_paths:
        - "config/"
        - "tools/music/"
      writable_paths:
        - "output/"
        - "logs/"
        - "temp/"
  
  parameters:
    - name: "description"
      type: "string"
      description: "Natural language description of the desired playlist"
      required: true
      default: ""
    
    - name: "platform"
      type: "enum"
      values: ["spotify", "youtube", "both"]
      default: "both"
      description: "Platform(s) to create playlist on"
    
    - name: "input_type"
      type: "enum"
      values: ["text", "voice", "auto"]
      default: "auto"
      description: "Input type (text, voice, or auto-detect)"
    
    - name: "name"
      type: "string"
      description: "Custom playlist name (optional)"
      required: false
    
    - name: "audio_file"
      type: "string"
      description: "Path to audio file for voice input"
      required: false
    
    - name: "max_songs"
      type: "integer"
      description: "Maximum number of songs to add to playlist"
      default: 50
      minimum: 1
      maximum: 200
    
    - name: "public"
      type: "boolean"
      description: "Whether to make the playlist public"
      default: true
    
    - name: "genres"
      type: "array"
      description: "Preferred genres for the playlist"
      required: false
    
    - name: "mood"
      type: "string"
      description: "Mood for the playlist (happy, sad, energetic, etc.)"
      required: false
    
    - name: "tempo"
      type: "enum"
      values: ["slow", "medium", "fast"]
      description: "Tempo preference"
      required: false
    
    - name: "decade"
      type: "string"
      description: "Decade preference (e.g., 1990s, 2000s, 2010s)"
      required: false
    
    - name: "config_file"
      type: "string"
      description: "Path to configuration file"
      required: false
    
    - name: "output_file"
      type: "string"
      description: "Path to save results"
      required: false
    
    - name: "verbose"
      type: "boolean"
      description: "Enable verbose output"
      default: false

interface:
  discovery:
    auto_discover: true
    patterns:
      - "**/music*orchestrator*.py"
      - "**/playlist*orchestrator*.py"
  
  execution:
    hot_swappable: true
    parallel_safe: false
    resource_intensive: true
  
  integration:
    agent_types: ["music", "entertainment", "assistant", "voice"]
    runtime_events: ["user_request", "playlist_created", "api_integration"]
    compatible_backends: ["all"]

protocols:
  - type: "mcp"
    function_name: "create_music_playlist"
    version: "1.0"
  - type: "a2a"
    action: "music.playlist.create"

outputs:
  primary:
    - type: "playlist"
      formats: ["json", "text"]
      location: "output/"
      description: "Generated playlist information and metadata"
    - type: "report"
      formats: ["json", "markdown"]
      location: "output/"
      description: "Detailed generation report and statistics"
  
  metrics:
    - "playlists_created"
    - "songs_added"
    - "platforms_used"
    - "processing_time"
    - "api_calls_made"
    - "success_rate"
    - "user_satisfaction"

dependencies:
  system:
    - "python3"
    - "pip"
    - "ffmpeg"
  
  python:
    - "asyncio"
    - "aiohttp>=3.8.0"
    - "spotipy>=2.22.0"
    - "google-api-python-client>=2.70.0"
    - "google-auth-oauthlib>=0.8.0"
    - "openai-whisper>=20231117"
    - "spacy>=3.4.0"
    - "librosa>=0.10.0"
    - "webrtcvad>=2.0.10"
    - "pyaudio>=0.2.11"
    - "numpy>=1.21.0"
    - "scipy>=1.7.0"
  
  services:
    - "spotify-api"
    - "youtube-api"
  
  workspace:
    - "config/music_config.json"
    - "tools/music/"

examples:
  - description: "Create a happy workout playlist"
    command: "python3 music/orchestrator/music_playlist_orchestrator.py --description 'Create a happy workout playlist' --platform both --max-songs 30"
    expected_output: "Playlist created successfully on both platforms"
  
  - description: "Voice input for relaxing jazz"
    command: "python3 music/orchestrator/music_playlist_orchestrator.py --description 'relaxing jazz music' --input-type voice --audio-file recording.wav"
    expected_output: "Playlist created from voice input"
  
  - description: "90s rock playlist"
    command: "python3 music/orchestrator/music_playlist_orchestrator.py --description 'awesome 90s rock hits' --genres rock --decade 1990s --platform spotify"
    expected_output: "90s rock playlist created on Spotify"

validation:
  input_validation:
    - "Validate audio file format if provided"
    - "Check API credentials availability"
    - "Verify platform access permissions"
  
  output_validation:
    - "Confirm playlist creation success"
    - "Validate song count matches request"
    - "Check playlist accessibility"
  
  error_handling:
    - "Handle API rate limits gracefully"
    - "Provide fallback for unavailable services"
    - "Log detailed error information"

monitoring:
  performance_metrics:
    - "Response time per platform"
    - "API call efficiency"
    - "Audio processing speed"
    - "NLP processing accuracy"
  
  usage_metrics:
    - "Popular genres requested"
    - "Preferred platforms"
    - "Voice vs text input usage"
    - "Playlist completion rates"
  
  error_tracking:
    - "API failures by service"
    - "Audio processing errors"
    - "Authentication failures"
    - "Network connectivity issues" 